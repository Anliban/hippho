// Top-level build file where you can add configuration options common to all sub-projects/modules.
import org.gradle.api.Plugin

buildscript {
    ext {
        kotlin_version = '1.3.71'
        lifecycle_version = '2.2.0'
        room_version = '2.2.5'
        dagger_version = '2.27'
        constraintlayout_version = '2.0.0-beta4'
        material_version = '1.1.0'
        rxjava2_version = '2.2.16'
        rxandroid_version = '2.1.1'
        ted_permission_version = '2.2.3'
        coroutine = '1.3.5'
        glide = '4.11.0'
        navigation = '2.3.0-alpha04'
        fragment_version = '1.2.3'
        timber = '4.7.1'
        joda_time_version = '2.10.3'
    }
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigation"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

Plugin.metaClass.isAndroidApp = { ->
    delegate.class.getCanonicalName() == "com.android.build.gradle.AppPlugin"
}
Plugin.metaClass.isDynamicFeature = { ->
    delegate.class.getCanonicalName() == "com.android.build.gradle.DynamicFeaturePlugin"
}
Plugin.metaClass.isAndroidLibrary = { ->
    delegate.class.getCanonicalName() == "com.android.build.gradle.LibraryPlugin"
}

allprojects {
    repositories {
        google()
        jcenter()

    }

    plugins.whenPluginAdded {
        if (it.isAndroidApp() || it.isAndroidLibrary() || it.isDynamicFeature()) {
            android.compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile).all {
        kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
